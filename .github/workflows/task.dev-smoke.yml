---
name: Task - Dev Command Smoke

on:
  workflow_dispatch:
  workflow_call:

permissions:
  contents: read

concurrency:
  group: dev-smoke-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            relevant:
              - '**/*.rs'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - 'justfile'
              - 'scripts/**'
              - 'scripts/ci/**'
              - '.github/workflows/**'

      - name: Skip if no relevant changes
        if: ${{ steps.changes.outputs.relevant != 'true' }}
        run: echo "No relevant changes for dev smoke. Skipping." && exit 0

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci
          save-if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq just

      - name: Download prod bins
        uses: actions/download-artifact@v4
        with:
          name: prod-bins
          path: dist

      - name: Download prod bins (if present)
        id: download
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: prod-bins
          path: dist

      - name: Resolve BIN_DIR (dist â†’ release)
        id: resolve
        shell: bash
        run: |
          set -euo pipefail
          candidates=( "dist" "target/release" )
          for d in "${candidates[@]}"; do
            if [[ -x "$d/mojave-node" && -x "$d/mojave-sequencer" && -x "$d/mojave-prover" ]]; then
              echo "BIN_DIR=$d" >> "$GITHUB_ENV"
              echo "Found binaries in: $d"
              chmod +x "$d"/mojave-*
              exit 0
            fi
          done
          echo "BIN_DIR=" >> "$GITHUB_ENV"
          echo "No ready-made binaries found in dist/target."

      - name: Build bins (fallback)
        if: ${{ env.BIN_DIR == '' }}
        run: cargo build --bins --release --locked --quiet

      - name: Set BIN_DIR to target/release (after fallback)
        if: ${{ env.BIN_DIR == '' }}
        run: |
          echo "BIN_DIR=target/release" >> "$GITHUB_ENV"
          chmod +x target/release/mojave-*

      - name: Sanity check binary targets exist
        shell: bash
        run: |
          set -euo pipefail
          bins=$(cargo metadata -q --format-version=1 | jq -r '.packages[].targets[] | select(.kind[]=="bin") | .name')
          for b in mojave-node mojave-sequencer mojave-prover; do
            echo "$bins" | grep -x "$b" >/dev/null || { echo "Missing bin target: $b"; exit 1; }
          done

      - name: Run dev command smoke
        run: |
          chmod +x ./scripts/ci/run-dev-smoke-commands.sh
          ./scripts/ci/run-dev-smoke-commands.sh
