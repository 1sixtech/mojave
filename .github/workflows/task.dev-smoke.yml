---
name: Task - Dev Command Smoke

on:
  workflow_dispatch:
    inputs:
      run_on:
        description: "Runner OS"
        type: string
        default: "ubuntu-latest"
      save_cache:
        description: "Save Rust cache (use true on main pushes)"
        type: boolean
        default: false
  workflow_call:
    inputs:
      run_on:
        description: "Runner OS"
        type: string
        default: "ubuntu-latest"
      save_cache:
        description: "Save Rust cache (use true on main pushes)"
        type: boolean
        default: false

permissions:
  contents: read

concurrency:
  group: dev-smoke-${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  smoke:
    runs-on: ${{ inputs.run_on }}
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            relevant:
              - '**/*.rs'
              - 'Cargo.toml'
              - 'Cargo.lock'
              - 'justfile'
              - 'scripts/**'
              - 'scripts/ci/**'
              - '.github/workflows/**'

      - name: Skip if no relevant changes
        if: ${{ steps.changes.outputs.relevant != 'true' }}
        run: echo "No relevant changes for dev smoke. Skipping." && exit 0

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@nightly

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci
          save-if: ${{ inputs.save_cache }}

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq just

      - name: Sanity check binary targets exist
        run: |
          set -euo pipefail
          bins=$(cargo metadata -q --format-version=1 | jq -r '.packages[].targets[] | select(.kind[]=="bin") | .name')
          echo "$bins" | grep -x "mojave-node"
          echo "$bins" | grep -x "mojave-sequencer"
          echo "$bins" | grep -x "mojave-prover"

      - name: Build bins if missing (fast)
        shell: bash
        run: |
          set -euo pipefail
          need_build=0
          for b in mojave-node mojave-sequencer mojave-prover; do
            if [[ ! -x "target/release/$b" ]]; then
              echo "missing target/release/$b"
              need_build=1
            fi
          done
          if [[ "$need_build" -eq 1 ]]; then
            echo "Building bins once..."
            cargo build --bins --release --locked --quiet
          else
            echo "All bins exist in cache. Skip build."
          fi

      - name: Run dev command smoke
        run: |
          chmod +x ./scripts/ci/run-dev-smoke-commands.sh
          ./scripts/ci/run-dev-smoke-commands.sh
