---
name: Task - Build & Push Docker Image
permissions:
  contents: read
  packages: write

on:
  workflow_dispatch:
    inputs:
      release_tag_name:
        description: "Release tag name"
        type: string
        required: true
  workflow_call:
    inputs:
      release_tag_name:
        description: "Release tag name"
        type: string
        required: true

env:
  REGISTRY_IMAGE_PREFIX: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        role: [sequencer, node, prover]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE_PREFIX }}/${{ matrix.role }}
          tags: type=raw,value=${{ inputs.release_tag_name }}

      - id: build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile.${{ matrix.role }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: >
            type=image,
            name=${{ env.REGISTRY_IMAGE_PREFIX }}/${{ matrix.role }},
            push-by-digest=true,
            name-canonical=true,
            push=true
          cache-from: type=gha,scope=${{ matrix.role }}
          cache-to: type=gha,mode=max,scope=${{ matrix.role }}

      - name: Collect digest
        shell: bash
        run: |
          set -euo pipefail

          mkdir -p /tmp/digests/${{ matrix.role }}
          digest="${{ steps.build.outputs.digest }}"

          [[ -n "$digest" ]] || { echo "empty digest"; exit 1; }

          touch "/tmp/digests/${{ matrix.role }}/${digest#sha256:}"
      - uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.role }}
          path: /tmp/digests/${{ matrix.role }}/*
          if-no-files-found: error
          retention-days: 1

  # this will be needed when we want to push multi-arch images
  merge:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      fail-fast: true
      matrix:
        role: [sequencer, node, prover]
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: digests-${{ matrix.role }}
          path: /tmp/digests/${{ matrix.role }}

      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE_PREFIX }}/${{ matrix.role }}
          tags: type=raw,value=${{ inputs.release_tag_name }}

      - name: Create manifest
        working-directory: /tmp/digests/${{ matrix.role }}
        shell: bash
        run: |
          set -euo pipefail

          tag_args="$(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON")"

          refs=""
          for p in ./*; do
            [ -f "$p" ] || continue
            refs="$refs ${{ env.REGISTRY_IMAGE_PREFIX }}/${{ matrix.role }}@sha256:${p##*/}"
          done

          [[ -n "$refs" ]] || { echo "No digests found to create manifest"; exit 1; }

          docker buildx imagetools create $tag_args $refs
      - name: Inspect manifest
        run: docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE_PREFIX }}/${{ matrix.role }}:${{ steps.meta.outputs.version }}
